version: '3.1'

# ****** SERVICES

services:
    
    # SERVICE webapp : notre application web
    webapp:
        image: rcbenevoles
        environment:
            APP_DB_SERVER: appdb                    # Variable d'environnement utilisée dans notre serveur web (serveur postgre)
            APP_DB_PASSWORD: rcbenevoles2017        # Variable d'environnement utilisée dans notre serveur web (serveur postgre)
            APP_GENERATE_DEV_DATA: 1                # Genere des donnees de tests
            APP_ADMIN_PASSWORD: testadmin
            APP_LOG_FILE_PATH: logs/rcb.log
            # APP_LOG_ES_NODE_URIS: http://localhost:9200
            # APP_LOG_ES_INDEX_FORMAT: rcb-{0:yyyy.MM.dd}
            # APP_LOG_ES_TEMPLATE_NAME: rcb-template
        deploy:
            restart_policy:
                condition: on-failure
        ports:
            - "5000:5000"
        depends_on:
            - appdb
        networks:
            - backnet

    # SERVICE appdb : notre base de données
    appdb:
        image: postgres
        volumes:
            - db_data:/var/lib/postgresql/data
        restart: always
        environment:
            POSTGRES_USER: rcbenevoles
            POSTGRES_PASSWORD: rcbenevoles2017
        networks:
            - backnet

    # SERVICE visualizer : c'est un service qu'on peut intégrer pour accéder à une page web qui montre les instances de chaque service. Accéder par http://vm:8080
    visualizer:
        image: dockersamples/visualizer:stable
        ports:
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - backnet

# ****** NETWORKS

networks:
    backnet:		# nom du réseau (backnet) sans parametre = reseau load-balancé par défaut


# ****** VOLUMES

volumes:
    db_data: 
